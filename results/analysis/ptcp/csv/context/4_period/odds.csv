eng_TAMsimp,SBH,LBH
PRES,0.21,4.84
PAST,0.59,1.71
PRES PART,0.39,2.56
PRES PROG,0.15,6.8
PAST PROG,0.2,5.06
PAST ~ PAST PROG,0.35,2.82
PRES ~ PRES PROG,0.14,7.33
PAST ~ PRES PART,0.49,2.05
PRES ~ PRES PART,0.22,4.64
PAST PERF,0.74,1.35
FUT,0.06,18.0
FUT ~ MOD shall,0.23,4.33
PAST PROG ~ PRES PART,0.19,5.2
PAST ~ PRES,0.16,6.25
PRES PART ~ PRES PROG,0.2,5.0
PRES PERF,0.2,5.0
PAST ~ PAST PERF,0.85,1.18
FUT ~ PRES,0.16,6.33
FUT ~ FUT going-to,0.2,5.0
PAST ~ PRES PERF,0.23,4.33
PRES ~ PRES PERF,0.33,3.0
PAST ~ TO INF,0.25,4.0
TO INF,0.67,1.5
MOD could ~ PAST,0.83,1.2
FUT going-to ~ PRES,0.14,7.0
FUT ~ PRES PROG,0.0,inf
MOD may ~ PRES,0.5,2.0
MOD can ~ PRES,0.2,5.0
MOD could,1.0,1.0
FUT going-to ~ PRES PROG,0.0,inf
PAST ~ PAST PERF PROG,1.0,1.0
PRES PART ~ TO INF,1.0,1.0
MOD would ~ PRES,0.33,3.0
MOD would ~ PAST,inf,0.0
MOD should,0.33,3.0
IMPV ~ PRES,1.0,1.0
MOD is to ~ MOD shall,0.33,3.0
MOD is to ~ PRES,0.0,inf
FUT ~ MOD is to,0.5,2.0
IMPV ~ MOD may,0.0,inf
IMPV,0.5,2.0
PAST PERF ~ PAST PROG,2.0,0.5
FUT ~ TO INF,0.5,2.0
MOD would,0.5,2.0
MOD was to ~ PAST,0.5,2.0
PRES PERF PROG ~ PRES PROG,0.5,2.0
MOD should ~ TO INF,inf,0.0
PRES ~ TO INF,0.5,2.0
MOD was to ~ TO INF,inf,0.0
MOD was to ~ PAST PROG,0.0,inf
FUT PROG ~ PRES PART,0.0,inf
MOD can ~ PRES PART,0.0,inf
PAST PERF ~ PRES PART,0.0,inf
MOD let ~ PRES,0.0,inf
MOD is to ~ TO INF,0.0,inf
PAST PERF PROG ~ PAST PROG,0.0,inf
MOD may,0.0,inf
PRES PART ~ PRES PERF,0.0,inf
MOD must ~ PRES,0.0,inf
PAST PERF ~ PAST PERF PROG,0.0,inf
FUT ~ MOD must,0.0,inf
PRES PERF PROG,1.0,1.0
FUT ~ PRES PART,0.0,inf
MOD shall ~ PRES,1.0,1.0
PRES PERF ~ PRES PROG,0.0,inf
MOD must ~ MOD shall,1.0,1.0
IMPV ~ PAST,inf,0.0
PRES PERF ~ TO INF,0.0,inf
PRES PERF ~ PRES PERF PROG,0.0,inf
FUT going-to ~ PRES PART,0.0,inf
PRES PART ~ PRES PERF PROG,0.0,inf
HAB used to ~ PAST PERF,inf,0.0
HAB used to ~ PAST,0.0,inf
IMPV ~ PRES PROG,0.0,inf
FUT going-to ~ MOD shall,0.0,inf
FUT ~ PAST,0.0,inf
PRES ~ PRES PERF PROG,0.0,inf
FUT ~ FUT PROG,inf,0.0
MOD is to ~ PRES PART,0.0,inf
MOD can,0.0,inf
PAST PROG ~ TO INF,0.0,inf
MOD let,0.0,inf
MOD let ~ TO INF,0.0,inf
MOD may ~ PAST,0.0,inf
MOD might,inf,0.0
MOD must,0.0,inf
MOD must ~ PRES PROG,0.0,inf
MOD shall,0.0,inf
MOD shall ~ PAST,0.0,inf
MOD shall ~ TO INF,0.0,inf
FUT PROG ~ MOD is to,0.0,inf
MOD should ~ MOD was to,inf,0.0
MOD should ~ MOD would,inf,0.0
MOD should ~ PAST,0.0,inf
MOD that VB ~ PRES PART,inf,0.0
MOD was to,inf,0.0
MOD was to ~ PRES PART,inf,0.0
MOD is to ~ MOD would,inf,0.0
MOD would ~ PRES PROG,0.0,inf
MOD is to,0.0,inf
MOD could ~ PRES PART,0.0,inf
PAST PERF ~ PRES,0.0,inf
PAST PROG ~ PRES,0.0,inf
MOD can ~ MOD shall,0.0,inf
TO INF ~ VB,inf,0.0

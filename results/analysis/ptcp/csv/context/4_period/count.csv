eng_TAMsimp,SBH,LBH
PRES,421,87
PAST,275,161
PRES PART,105,41
PRES PROG,102,15
PAST PROG,81,16
PAST ~ PAST PROG,62,22
PRES ~ PRES PROG,66,9
PAST ~ PRES PART,45,22
PRES ~ PRES PART,51,11
PAST PERF,23,17
FUT,36,2
FUT ~ MOD shall,26,6
PAST PROG ~ PRES PART,26,5
PAST ~ PRES,25,4
PRES PART ~ PRES PROG,20,4
PRES PERF,20,4
PAST ~ PAST PERF,13,11
FUT ~ PRES,19,3
FUT ~ FUT going-to,15,3
PAST ~ PRES PERF,13,3
PRES ~ PRES PERF,12,4
PAST ~ TO INF,12,3
TO INF,9,6
MOD could ~ PAST,6,5
FUT going-to ~ PRES,7,1
FUT ~ PRES PROG,8,0
MOD may ~ PRES,4,2
MOD can ~ PRES,5,1
MOD could,3,3
FUT going-to ~ PRES PROG,5,0
PAST ~ PAST PERF PROG,2,2
PRES PART ~ TO INF,2,2
MOD would ~ PRES,3,1
MOD would ~ PAST,0,4
MOD should,3,1
IMPV ~ PRES,2,2
MOD is to ~ MOD shall,3,1
MOD is to ~ PRES,4,0
FUT ~ MOD is to,2,1
IMPV ~ MOD may,3,0
IMPV,2,1
PAST PERF ~ PAST PROG,1,2
FUT ~ TO INF,2,1
MOD would,2,1
MOD was to ~ PAST,2,1
PRES PERF PROG ~ PRES PROG,2,1
MOD should ~ TO INF,0,3
PRES ~ TO INF,2,1
MOD was to ~ TO INF,0,2
MOD was to ~ PAST PROG,2,0
FUT PROG ~ PRES PART,2,0
MOD can ~ PRES PART,2,0
PAST PERF ~ PRES PART,2,0
MOD let ~ PRES,2,0
MOD is to ~ TO INF,2,0
PAST PERF PROG ~ PAST PROG,2,0
MOD may,2,0
PRES PART ~ PRES PERF,2,0
MOD must ~ PRES,2,0
PAST PERF ~ PAST PERF PROG,2,0
FUT ~ MOD must,2,0
PRES PERF PROG,1,1
FUT ~ PRES PART,2,0
MOD shall ~ PRES,1,1
PRES PERF ~ PRES PROG,2,0
MOD must ~ MOD shall,1,1
IMPV ~ PAST,0,1
PRES PERF ~ TO INF,1,0
PRES PERF ~ PRES PERF PROG,1,0
FUT going-to ~ PRES PART,1,0
PRES PART ~ PRES PERF PROG,1,0
HAB used to ~ PAST PERF,0,1
HAB used to ~ PAST,1,0
IMPV ~ PRES PROG,1,0
FUT going-to ~ MOD shall,1,0
FUT ~ PAST,1,0
PRES ~ PRES PERF PROG,1,0
FUT ~ FUT PROG,0,1
MOD is to ~ PRES PART,1,0
MOD can,1,0
PAST PROG ~ TO INF,1,0
MOD let,1,0
MOD let ~ TO INF,1,0
MOD may ~ PAST,1,0
MOD might,0,1
MOD must,1,0
MOD must ~ PRES PROG,1,0
MOD shall,1,0
MOD shall ~ PAST,1,0
MOD shall ~ TO INF,1,0
FUT PROG ~ MOD is to,1,0
MOD should ~ MOD was to,0,1
MOD should ~ MOD would,0,1
MOD should ~ PAST,1,0
MOD that VB ~ PRES PART,0,1
MOD was to,0,1
MOD was to ~ PRES PART,0,1
MOD is to ~ MOD would,0,1
MOD would ~ PRES PROG,1,0
MOD is to,1,0
MOD could ~ PRES PART,1,0
PAST PERF ~ PRES,1,0
PAST PROG ~ PRES,1,0
MOD can ~ MOD shall,1,0
TO INF ~ VB,0,1

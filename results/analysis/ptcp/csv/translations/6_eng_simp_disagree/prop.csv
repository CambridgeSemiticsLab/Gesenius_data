,sum
PRES ~ PRES PART,0.16
PAST ~ PAST PROG,0.09
PAST ~ PRES PART,0.08
PRES ~ PRES PROG,0.08
PAST ~ PRES,0.05
FUT ~ PRES,0.05
FUT ~ MOD shall,0.04
PRES ~ PRES PERF,0.04
PAST PROG ~ PRES PART,0.03
FUT ~ FUT going-to,0.03
PAST ~ PRES PERF,0.03
PAST ~ PAST PERF,0.02
PRES PART ~ PRES PROG,0.02
FUT ~ PRES PROG,0.02
FUT ~ PRES PART,0.02
PAST ~ TO INF,0.01
MOD may ~ PRES,0.01
FUT ~ TO INF,0.01
FUT going-to ~ PRES,0.01
MOD could ~ PAST,0.01
PRES ~ TO INF,0.01
PRES PART ~ TO INF,0.01
FUT going-to ~ PRES PROG,0.01
MOD is to ~ PRES,0.01
IMPV ~ PRES,0.01
MOD can ~ PRES,0.01
PRES PART ~ PRES PERF,0.01
MOD shall ~ PRES,0.0
PAST PERF ~ PAST PROG,0.0
FUT ~ MOD must,0.0
PAST ~ PAST PERF PROG,0.0
FUT going-to ~ MOD shall,0.0
MOD is to ~ MOD shall,0.0
PAST ~ PRES PROG,0.0
IMPV ~ MOD may,0.0
MOD would ~ PRES,0.0
PAST PROG ~ PRES,0.0
MOD would ~ PAST,0.0
MOD should ~ TO INF,0.0
PRES PERF ~ PRES PROG,0.0
MOD let ~ PRES,0.0
MOD can ~ TO INF,0.0
MOD can ~ MOD shall,0.0
MOD shall ~ TO INF,0.0
PRES ~ PRES PERF PROG,0.0
MOD was to ~ PAST,0.0
FUT ~ MOD is to,0.0
FUT PROG ~ PRES PART,0.0
MOD is to ~ PRES PART,0.0
PRES PERF PROG ~ PRES PROG,0.0
MOD should ~ MOD would,0.0
FUT ~ MOD may,0.0
PAST PERF PROG ~ PAST PROG,0.0
PAST PERF ~ PRES PART,0.0
MOD was to ~ TO INF,0.0
MOD is to ~ TO INF,0.0
MOD was to ~ PAST PROG,0.0
MOD must ~ PRES,0.0
MOD may ~ TO INF,0.0
PAST PERF ~ PRES,0.0
PRES ~ PRES PROG keep,0.0
MOD must ~ MOD shall,0.0
FUT going-to ~ PRES PART,0.0
PAST PERF ~ PAST PERF PROG,0.0
MOD can ~ PRES PART,0.0
PRES PART ~ PRES PERF PROG,0.0
FUT ~ PAST PROG,0.0
MOD may ~ PAST,0.0
MOD should ~ PRES PERF,0.0
MOD may ~ PRES PART,0.0
PRES PROG ~ PRES PROG keep,0.0
MOD shall ~ PAST,0.0
FUT ~ VB,0.0
MOD would ~ PRES PROG,0.0
MOD let ~ TO INF,0.0
MOD should ~ PAST,0.0
HAB used to ~ PAST PERF,0.0
FUT ~ MOD can,0.0
PRES PROG ~ TO INF,0.0
MOD should ~ PRES,0.0
MOD is to ~ MOD would,0.0
HAB used to ~ PAST,0.0
PRES PERF ~ TO INF,0.0
PAST PROG ~ TO INF,0.0
PAST ~ VB,0.0
MOD should ~ MOD was to,0.0
MOD shall ~ PRES PERF,0.0
IMPV ~ PAST,0.0
MOD could ~ PRES PART,0.0
FUT ~ MOD would,0.0
MOD that VB ~ PRES PART,0.0
MOD was to ~ PRES PART,0.0
PRES PERF ~ PRES PERF PROG,0.0
MOD must ~ PRES PART,0.0
IMPV ~ PRES PROG,0.0
TO INF ~ VB,0.0
MOD need not ~ TO INF,0.0
MOD can ~ MOD may,0.0
MOD would ~ PRES PERF,0.0
FUT ~ FUT PROG,0.0
FUT PROG ~ MOD is to,0.0
FUT ~ PAST,0.0
MOD shall ~ PRES PART,0.0

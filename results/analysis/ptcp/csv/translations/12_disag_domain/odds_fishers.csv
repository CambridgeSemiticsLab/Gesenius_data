,Q,N
PRES ~ PRES PART,6.23,0.16
PAST ~ PAST PROG,0.06,17.91
PRES ~ PRES PROG,35.28,0.03
PAST ~ PRES PART,0.07,15.38
PAST ~ PRES,2.5,0.4
FUT ~ PRES,inf,0.0
PRES ~ PRES PERF,inf,0.0
FUT ~ MOD shall,inf,0.0
PAST PROG ~ PRES PART,0.05,20.16
FUT ~ FUT going-to,inf,0.0
PAST ~ PRES PERF,inf,0.0
PAST ~ PAST PERF,0.05,21.54
PRES PART ~ PRES PROG,9.05,0.11
FUT ~ PRES PROG,inf,0.0
FUT ~ PRES PART,inf,0.0
PAST ~ TO INF,0.08,12.31
MOD may ~ PRES,inf,0.0
FUT ~ TO INF,inf,0.0
FUT going-to ~ PRES,inf,0.0
FUT going-to ~ PRES PROG,inf,0.0
PRES PART ~ TO INF,0.55,1.83
MOD could ~ PAST,0.0,inf
IMPV ~ PRES,inf,0.0
MOD can ~ PRES,inf,0.0
MOD is to ~ PRES,inf,0.0
PRES ~ TO INF,1.84,0.54
PRES PART ~ PRES PERF,inf,0.0
MOD shall ~ PRES,inf,0.0
PAST PERF ~ PAST PROG,0.09,11.04
MOD would ~ PAST,0.0,inf
MOD would ~ PRES,inf,0.0
FUT ~ MOD must,inf,0.0
IMPV ~ MOD may,inf,0.0
PAST ~ PRES PROG,inf,0.0
MOD is to ~ MOD shall,1.1,0.91
PAST ~ PAST PERF PROG,0.0,inf
FUT going-to ~ MOD shall,inf,0.0
MOD can ~ MOD shall,inf,0.0
PRES ~ PRES PERF PROG,inf,0.0
FUT PROG ~ PRES PART,inf,0.0
MOD shall ~ TO INF,inf,0.0
PRES PERF ~ PRES PROG,inf,0.0
MOD should ~ MOD would,0.73,1.36
PRES PERF PROG ~ PRES PROG,inf,0.0
MOD is to ~ PRES PART,inf,0.0
MOD should ~ TO INF,inf,0.0
MOD was to ~ PAST,0.0,inf
FUT ~ MOD is to,inf,0.0
MOD can ~ TO INF,inf,0.0
PAST PROG ~ PRES,inf,0.0
MOD can ~ PRES PART,inf,0.0
MOD may ~ PAST,inf,0.0
MOD let ~ PRES,inf,0.0
MOD may ~ TO INF,inf,0.0
MOD must ~ MOD shall,inf,0.0
MOD is to ~ TO INF,inf,0.0
MOD was to ~ TO INF,0.0,inf
MOD must ~ PRES,inf,0.0
PAST PERF PROG ~ PAST PROG,0.0,inf
PRES ~ PRES PROG keep,inf,0.0
FUT going-to ~ PRES PART,inf,0.0
PRES PART ~ PRES PERF PROG,inf,0.0
PAST PERF ~ PRES PART,0.0,inf
PAST PERF ~ PRES,0.0,inf
FUT ~ PAST PROG,inf,0.0
PAST PERF ~ PAST PERF PROG,0.0,inf
MOD was to ~ PAST PROG,0.0,inf
FUT ~ MOD may,inf,0.0
FUT ~ MOD can,inf,0.0
HAB used to ~ PAST,0.0,inf
HAB used to ~ PAST PERF,0.0,inf
FUT ~ VB,inf,0.0
FUT ~ FUT PROG,inf,0.0
FUT ~ MOD would,inf,0.0
FUT ~ PAST,inf,0.0
TO INF ~ VB,0.0,inf
MOD shall ~ PRES PART,inf,0.0
IMPV ~ PRES PROG,inf,0.0
MOD should ~ PRES PERF,inf,0.0
PRES PROG ~ TO INF,inf,0.0
PRES PROG ~ PRES PROG keep,inf,0.0
PRES PERF ~ TO INF,inf,0.0
PRES PERF ~ PRES PERF PROG,inf,0.0
PAST ~ VB,inf,0.0
PAST PROG ~ TO INF,0.0,inf
MOD would ~ PRES PROG,inf,0.0
MOD would ~ PRES PERF,inf,0.0
MOD was to ~ PRES PART,0.0,inf
MOD that VB ~ PRES PART,0.0,inf
MOD should ~ PRES,inf,0.0
MOD can ~ MOD may,inf,0.0
MOD should ~ PAST,0.0,inf
MOD should ~ MOD was to,0.0,inf
MOD shall ~ PRES PERF,inf,0.0
MOD shall ~ PAST,inf,0.0
MOD need not ~ TO INF,inf,0.0
MOD must ~ PRES PART,inf,0.0
MOD may ~ PRES PART,inf,0.0
MOD let ~ TO INF,inf,0.0
MOD is to ~ MOD would,inf,0.0
MOD could ~ PRES PART,0.0,inf
FUT PROG ~ MOD is to,inf,0.0

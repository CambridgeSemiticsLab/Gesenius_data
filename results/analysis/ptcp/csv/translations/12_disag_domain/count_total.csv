eng_TAMsimp,TOTAL,Q,N
PRES ~ PRES PART,167,156,11
PAST ~ PAST PROG,99,17,82
PRES ~ PRES PROG,87,86,1
PAST ~ PRES PART,86,16,70
PAST ~ PRES,53,46,7
FUT ~ PRES,49,49,0
PRES ~ PRES PERF,45,45,0
FUT ~ MOD shall,44,44,0
PAST PROG ~ PRES PART,38,5,33
FUT ~ FUT going-to,34,34,0
PAST ~ PRES PERF,31,31,0
PAST ~ PAST PERF,25,3,22
PRES PART ~ PRES PROG,25,24,1
FUT ~ PRES PROG,22,22,0
FUT ~ PRES PART,17,17,0
PAST ~ TO INF,16,3,13
MOD may ~ PRES,12,12,0
FUT ~ TO INF,11,11,0
FUT going-to ~ PRES,11,11,0
FUT going-to ~ PRES PROG,10,10,0
PRES PART ~ TO INF,10,6,4
MOD could ~ PAST,8,0,8
IMPV ~ PRES,8,8,0
MOD can ~ PRES,7,7,0
MOD is to ~ PRES,7,7,0
PRES ~ TO INF,6,5,1
PRES PART ~ PRES PERF,5,5,0
MOD shall ~ PRES,5,5,0
PAST PERF ~ PAST PROG,5,1,4
MOD would ~ PAST,4,0,4
MOD would ~ PRES,4,4,0
FUT ~ MOD must,4,4,0
IMPV ~ MOD may,4,4,0
PAST ~ PRES PROG,4,4,0
MOD is to ~ MOD shall,4,3,1
PAST ~ PAST PERF PROG,4,0,4
FUT going-to ~ MOD shall,4,4,0
MOD can ~ MOD shall,3,3,0
PRES ~ PRES PERF PROG,3,3,0
FUT PROG ~ PRES PART,3,3,0
MOD shall ~ TO INF,3,3,0
PRES PERF ~ PRES PROG,3,3,0
MOD should ~ MOD would,3,2,1
PRES PERF PROG ~ PRES PROG,3,3,0
MOD is to ~ PRES PART,3,3,0
MOD should ~ TO INF,3,3,0
MOD was to ~ PAST,3,0,3
FUT ~ MOD is to,3,3,0
MOD can ~ TO INF,3,3,0
PAST PROG ~ PRES,3,3,0
MOD can ~ PRES PART,2,2,0
MOD may ~ PAST,2,2,0
MOD let ~ PRES,2,2,0
MOD may ~ TO INF,2,2,0
MOD must ~ MOD shall,2,2,0
MOD is to ~ TO INF,2,2,0
MOD was to ~ TO INF,2,0,2
MOD must ~ PRES,2,2,0
PAST PERF PROG ~ PAST PROG,2,0,2
PRES ~ PRES PROG keep,2,2,0
FUT going-to ~ PRES PART,2,2,0
PRES PART ~ PRES PERF PROG,2,2,0
PAST PERF ~ PRES PART,2,0,2
PAST PERF ~ PRES,2,0,2
FUT ~ PAST PROG,2,2,0
PAST PERF ~ PAST PERF PROG,2,0,2
MOD was to ~ PAST PROG,2,0,2
FUT ~ MOD may,2,2,0
FUT ~ MOD can,1,1,0
HAB used to ~ PAST,1,0,1
HAB used to ~ PAST PERF,1,0,1
FUT ~ VB,1,1,0
FUT ~ FUT PROG,1,1,0
FUT ~ MOD would,1,1,0
FUT ~ PAST,1,1,0
TO INF ~ VB,1,0,1
MOD shall ~ PRES PART,1,1,0
IMPV ~ PRES PROG,1,1,0
MOD should ~ PRES PERF,1,1,0
PRES PROG ~ TO INF,1,1,0
PRES PROG ~ PRES PROG keep,1,1,0
PRES PERF ~ TO INF,1,1,0
PRES PERF ~ PRES PERF PROG,1,1,0
PAST ~ VB,1,1,0
PAST PROG ~ TO INF,1,0,1
MOD would ~ PRES PROG,1,1,0
MOD would ~ PRES PERF,1,1,0
MOD was to ~ PRES PART,1,0,1
MOD that VB ~ PRES PART,1,0,1
MOD should ~ PRES,1,1,0
MOD can ~ MOD may,1,1,0
MOD should ~ PAST,1,0,1
MOD should ~ MOD was to,1,0,1
MOD shall ~ PRES PERF,1,1,0
MOD shall ~ PAST,1,1,0
MOD need not ~ TO INF,1,1,0
MOD must ~ PRES PART,1,1,0
MOD may ~ PRES PART,1,1,0
MOD let ~ TO INF,1,1,0
MOD is to ~ MOD would,1,1,0
MOD could ~ PRES PART,1,0,1
FUT PROG ~ MOD is to,1,1,0

eng_TAMsimp,Q,N
PRES ~ PRES PART,0.07,14.18
PAST ~ PAST PROG,4.82,0.21
PRES ~ PRES PROG,0.01,86.0
PAST ~ PRES PART,4.38,0.23
PAST ~ PRES,0.15,6.57
FUT ~ PRES,0.0,inf
PRES ~ PRES PERF,0.0,inf
FUT ~ MOD shall,0.0,inf
PAST PROG ~ PRES PART,6.6,0.15
FUT ~ FUT going-to,0.0,inf
PAST ~ PRES PERF,0.0,inf
PAST ~ PAST PERF,7.33,0.14
PRES PART ~ PRES PROG,0.04,24.0
FUT ~ PRES PROG,0.0,inf
FUT ~ PRES PART,0.0,inf
PAST ~ TO INF,4.33,0.23
MOD may ~ PRES,0.0,inf
FUT ~ TO INF,0.0,inf
FUT going-to ~ PRES,0.0,inf
FUT going-to ~ PRES PROG,0.0,inf
PRES PART ~ TO INF,0.67,1.5
MOD could ~ PAST,inf,0.0
IMPV ~ PRES,0.0,inf
MOD can ~ PRES,0.0,inf
MOD is to ~ PRES,0.0,inf
PRES ~ TO INF,0.2,5.0
PRES PART ~ PRES PERF,0.0,inf
MOD shall ~ PRES,0.0,inf
PAST PERF ~ PAST PROG,4.0,0.25
MOD would ~ PAST,inf,0.0
MOD would ~ PRES,0.0,inf
FUT ~ MOD must,0.0,inf
IMPV ~ MOD may,0.0,inf
PAST ~ PRES PROG,0.0,inf
MOD is to ~ MOD shall,0.33,3.0
PAST ~ PAST PERF PROG,inf,0.0
FUT going-to ~ MOD shall,0.0,inf
MOD can ~ MOD shall,0.0,inf
PRES ~ PRES PERF PROG,0.0,inf
FUT PROG ~ PRES PART,0.0,inf
MOD shall ~ TO INF,0.0,inf
PRES PERF ~ PRES PROG,0.0,inf
MOD should ~ MOD would,0.5,2.0
PRES PERF PROG ~ PRES PROG,0.0,inf
MOD is to ~ PRES PART,0.0,inf
MOD should ~ TO INF,0.0,inf
MOD was to ~ PAST,inf,0.0
FUT ~ MOD is to,0.0,inf
MOD can ~ TO INF,0.0,inf
PAST PROG ~ PRES,0.0,inf
MOD can ~ PRES PART,0.0,inf
MOD may ~ PAST,0.0,inf
MOD let ~ PRES,0.0,inf
MOD may ~ TO INF,0.0,inf
MOD must ~ MOD shall,0.0,inf
MOD is to ~ TO INF,0.0,inf
MOD was to ~ TO INF,inf,0.0
MOD must ~ PRES,0.0,inf
PAST PERF PROG ~ PAST PROG,inf,0.0
PRES ~ PRES PROG keep,0.0,inf
FUT going-to ~ PRES PART,0.0,inf
PRES PART ~ PRES PERF PROG,0.0,inf
PAST PERF ~ PRES PART,inf,0.0
PAST PERF ~ PRES,inf,0.0
FUT ~ PAST PROG,0.0,inf
PAST PERF ~ PAST PERF PROG,inf,0.0
MOD was to ~ PAST PROG,inf,0.0
FUT ~ MOD may,0.0,inf
FUT ~ MOD can,0.0,inf
HAB used to ~ PAST,inf,0.0
HAB used to ~ PAST PERF,inf,0.0
FUT ~ VB,0.0,inf
FUT ~ FUT PROG,0.0,inf
FUT ~ MOD would,0.0,inf
FUT ~ PAST,0.0,inf
TO INF ~ VB,inf,0.0
MOD shall ~ PRES PART,0.0,inf
IMPV ~ PRES PROG,0.0,inf
MOD should ~ PRES PERF,0.0,inf
PRES PROG ~ TO INF,0.0,inf
PRES PROG ~ PRES PROG keep,0.0,inf
PRES PERF ~ TO INF,0.0,inf
PRES PERF ~ PRES PERF PROG,0.0,inf
PAST ~ VB,0.0,inf
PAST PROG ~ TO INF,inf,0.0
MOD would ~ PRES PROG,0.0,inf
MOD would ~ PRES PERF,0.0,inf
MOD was to ~ PRES PART,inf,0.0
MOD that VB ~ PRES PART,inf,0.0
MOD should ~ PRES,0.0,inf
MOD can ~ MOD may,0.0,inf
MOD should ~ PAST,inf,0.0
MOD should ~ MOD was to,inf,0.0
MOD shall ~ PRES PERF,0.0,inf
MOD shall ~ PAST,0.0,inf
MOD need not ~ TO INF,0.0,inf
MOD must ~ PRES PART,0.0,inf
MOD may ~ PRES PART,0.0,inf
MOD let ~ TO INF,0.0,inf
MOD is to ~ MOD would,0.0,inf
MOD could ~ PRES PART,inf,0.0
FUT PROG ~ MOD is to,0.0,inf
